//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.05 at 11:05:25 AM CEST 
//


package com.ptc.tifworkbench.jaxbbinding;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for FieldDefinition complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FieldDefinition">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="values" type="{http://www.ptc.com/integrity-solution}ValuesDefinition" minOccurs="0"/>
 *         &lt;element name="editability" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="relevance" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="relates" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="reverse" type="{http://www.ptc.com/integrity-solution}ReverseRelationship"/>
 *         &lt;element name="computation" type="{http://www.ptc.com/integrity-solution}ComputationDefinition" minOccurs="0"/>
 *         &lt;element name="default-columns" type="{http://www.ptc.com/integrity-solution}ColumnsDefinition" minOccurs="0"/>
 *         &lt;element name="backing-issue" type="{http://www.ptc.com/integrity-solution}BackingIssueReference"/>
 *         &lt;element name="query" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="correlation" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="default" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ranges" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="range" type="{http://www.ptc.com/integrity-solution}RangeDefinition"/>
 *                 &lt;/sequence>
 *                 &lt;attribute name="associated-field" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="phases" type="{http://www.ptc.com/integrity-solution}PhasesDefinition" minOccurs="0"/>
 *         &lt;element name="suggestions" type="{http://www.ptc.com/integrity-solution}Suggestions" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="type" use="required" type="{http://www.ptc.com/integrity-solution}FieldType" />
 *       &lt;attribute name="displayPattern" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="multivalued" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="rich-content" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="display-name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="max-length" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="display-rows" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="logging" type="{http://www.ptc.com/integrity-solution}LoggingType" />
 *       &lt;attribute name="text-index" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="displayType" type="{http://www.ptc.com/integrity-solution}DisplayType" />
 *       &lt;attribute name="max" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="min" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="defaultAttachmentField" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="trace" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="substParams" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="variableHeightRows" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="includeTime" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="displayTrueAs" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="displayFalseAs" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="displayAsLink" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="displayAsProgress" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="displayAs" type="{http://www.ptc.com/integrity-solution}DisplayAsType" />
 *       &lt;attribute name="cycleDetection" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="showVariableHeightRows" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="substituteParameters" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="storeToHistoryFrequency" type="{http://www.ptc.com/integrity-solution}StoreToHistoryFrequencyType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FieldDefinition", propOrder = {
    "description",
    "values",
    "editability",
    "relevance",
    "relates",
    "reverse",
    "computation",
    "defaultColumns",
    "backingIssue",
    "query",
    "correlation",
    "_default",
    "ranges",
    "phases",
    "suggestions"
})
public class FieldDefinition
    implements Equals, HashCode, ToString
{

    protected String description;
    protected ValuesDefinition values;
    protected String editability;
    protected String relevance;
    protected String relates;
    @XmlElement(required = true)
    protected ReverseRelationship reverse;
    protected ComputationDefinition computation;
    @XmlElement(name = "default-columns")
    protected ColumnsDefinition defaultColumns;
    @XmlElement(name = "backing-issue", required = true)
    protected BackingIssueReference backingIssue;
    protected String query;
    protected String correlation;
    @XmlElement(name = "default")
    protected String _default;
    protected FieldDefinition.Ranges ranges;
    protected PhasesDefinition phases;
    protected Suggestions suggestions;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "type", required = true)
    protected FieldType type;
    @XmlAttribute(name = "displayPattern")
    protected String displayPattern;
    @XmlAttribute(name = "multivalued")
    protected Boolean multivalued;
    @XmlAttribute(name = "rich-content")
    protected Boolean richContent;
    @XmlAttribute(name = "display-name")
    protected String displayName;
    @XmlAttribute(name = "max-length")
    protected Integer maxLength;
    @XmlAttribute(name = "display-rows")
    protected Integer displayRows;
    @XmlAttribute(name = "logging")
    protected LoggingType logging;
    @XmlAttribute(name = "text-index")
    protected Boolean textIndex;
    @XmlAttribute(name = "displayType")
    protected DisplayType displayType;
    @XmlAttribute(name = "max")
    protected String max;
    @XmlAttribute(name = "min")
    protected String min;
    @XmlAttribute(name = "defaultAttachmentField")
    protected String defaultAttachmentField;
    @XmlAttribute(name = "trace")
    protected Boolean trace;
    @XmlAttribute(name = "substParams")
    protected Boolean substParams;
    @XmlAttribute(name = "variableHeightRows")
    protected Boolean variableHeightRows;
    @XmlAttribute(name = "includeTime")
    protected Boolean includeTime;
    @XmlAttribute(name = "displayTrueAs")
    protected String displayTrueAs;
    @XmlAttribute(name = "displayFalseAs")
    protected String displayFalseAs;
    @XmlAttribute(name = "displayAsLink")
    protected Boolean displayAsLink;
    @XmlAttribute(name = "displayAsProgress")
    protected Boolean displayAsProgress;
    @XmlAttribute(name = "displayAs")
    protected DisplayAsType displayAs;
    @XmlAttribute(name = "cycleDetection")
    protected Boolean cycleDetection;
    @XmlAttribute(name = "showVariableHeightRows")
    protected Boolean showVariableHeightRows;
    @XmlAttribute(name = "substituteParameters")
    protected Boolean substituteParameters;
    @XmlAttribute(name = "storeToHistoryFrequency")
    protected StoreToHistoryFrequencyType storeToHistoryFrequency;

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the values property.
     * 
     * @return
     *     possible object is
     *     {@link ValuesDefinition }
     *     
     */
    public ValuesDefinition getValues() {
        return values;
    }

    /**
     * Sets the value of the values property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValuesDefinition }
     *     
     */
    public void setValues(ValuesDefinition value) {
        this.values = value;
    }

    /**
     * Gets the value of the editability property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEditability() {
        return editability;
    }

    /**
     * Sets the value of the editability property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEditability(String value) {
        this.editability = value;
    }

    /**
     * Gets the value of the relevance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRelevance() {
        return relevance;
    }

    /**
     * Sets the value of the relevance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRelevance(String value) {
        this.relevance = value;
    }

    /**
     * Gets the value of the relates property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRelates() {
        return relates;
    }

    /**
     * Sets the value of the relates property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRelates(String value) {
        this.relates = value;
    }

    /**
     * Gets the value of the reverse property.
     * 
     * @return
     *     possible object is
     *     {@link ReverseRelationship }
     *     
     */
    public ReverseRelationship getReverse() {
        return reverse;
    }

    /**
     * Sets the value of the reverse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReverseRelationship }
     *     
     */
    public void setReverse(ReverseRelationship value) {
        this.reverse = value;
    }

    /**
     * Gets the value of the computation property.
     * 
     * @return
     *     possible object is
     *     {@link ComputationDefinition }
     *     
     */
    public ComputationDefinition getComputation() {
        return computation;
    }

    /**
     * Sets the value of the computation property.
     * 
     * @param value
     *     allowed object is
     *     {@link ComputationDefinition }
     *     
     */
    public void setComputation(ComputationDefinition value) {
        this.computation = value;
    }

    /**
     * Gets the value of the defaultColumns property.
     * 
     * @return
     *     possible object is
     *     {@link ColumnsDefinition }
     *     
     */
    public ColumnsDefinition getDefaultColumns() {
        return defaultColumns;
    }

    /**
     * Sets the value of the defaultColumns property.
     * 
     * @param value
     *     allowed object is
     *     {@link ColumnsDefinition }
     *     
     */
    public void setDefaultColumns(ColumnsDefinition value) {
        this.defaultColumns = value;
    }

    /**
     * Gets the value of the backingIssue property.
     * 
     * @return
     *     possible object is
     *     {@link BackingIssueReference }
     *     
     */
    public BackingIssueReference getBackingIssue() {
        return backingIssue;
    }

    /**
     * Sets the value of the backingIssue property.
     * 
     * @param value
     *     allowed object is
     *     {@link BackingIssueReference }
     *     
     */
    public void setBackingIssue(BackingIssueReference value) {
        this.backingIssue = value;
    }

    /**
     * Gets the value of the query property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getQuery() {
        return query;
    }

    /**
     * Sets the value of the query property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQuery(String value) {
        this.query = value;
    }

    /**
     * Gets the value of the correlation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCorrelation() {
        return correlation;
    }

    /**
     * Sets the value of the correlation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCorrelation(String value) {
        this.correlation = value;
    }

    /**
     * Gets the value of the default property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDefault() {
        return _default;
    }

    /**
     * Sets the value of the default property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDefault(String value) {
        this._default = value;
    }

    /**
     * Gets the value of the ranges property.
     * 
     * @return
     *     possible object is
     *     {@link FieldDefinition.Ranges }
     *     
     */
    public FieldDefinition.Ranges getRanges() {
        return ranges;
    }

    /**
     * Sets the value of the ranges property.
     * 
     * @param value
     *     allowed object is
     *     {@link FieldDefinition.Ranges }
     *     
     */
    public void setRanges(FieldDefinition.Ranges value) {
        this.ranges = value;
    }

    /**
     * Gets the value of the phases property.
     * 
     * @return
     *     possible object is
     *     {@link PhasesDefinition }
     *     
     */
    public PhasesDefinition getPhases() {
        return phases;
    }

    /**
     * Sets the value of the phases property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhasesDefinition }
     *     
     */
    public void setPhases(PhasesDefinition value) {
        this.phases = value;
    }

    /**
     * Gets the value of the suggestions property.
     * 
     * @return
     *     possible object is
     *     {@link Suggestions }
     *     
     */
    public Suggestions getSuggestions() {
        return suggestions;
    }

    /**
     * Sets the value of the suggestions property.
     * 
     * @param value
     *     allowed object is
     *     {@link Suggestions }
     *     
     */
    public void setSuggestions(Suggestions value) {
        this.suggestions = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link FieldType }
     *     
     */
    public FieldType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link FieldType }
     *     
     */
    public void setType(FieldType value) {
        this.type = value;
    }

    /**
     * Gets the value of the displayPattern property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayPattern() {
        return displayPattern;
    }

    /**
     * Sets the value of the displayPattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayPattern(String value) {
        this.displayPattern = value;
    }

    /**
     * Gets the value of the multivalued property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isMultivalued() {
        return multivalued;
    }

    /**
     * Sets the value of the multivalued property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setMultivalued(Boolean value) {
        this.multivalued = value;
    }

    /**
     * Gets the value of the richContent property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isRichContent() {
        return richContent;
    }

    /**
     * Sets the value of the richContent property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRichContent(Boolean value) {
        this.richContent = value;
    }

    /**
     * Gets the value of the displayName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Gets the value of the maxLength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getMaxLength() {
        return maxLength;
    }

    /**
     * Sets the value of the maxLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMaxLength(Integer value) {
        this.maxLength = value;
    }

    /**
     * Gets the value of the displayRows property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getDisplayRows() {
        return displayRows;
    }

    /**
     * Sets the value of the displayRows property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDisplayRows(Integer value) {
        this.displayRows = value;
    }

    /**
     * Gets the value of the logging property.
     * 
     * @return
     *     possible object is
     *     {@link LoggingType }
     *     
     */
    public LoggingType getLogging() {
        return logging;
    }

    /**
     * Sets the value of the logging property.
     * 
     * @param value
     *     allowed object is
     *     {@link LoggingType }
     *     
     */
    public void setLogging(LoggingType value) {
        this.logging = value;
    }

    /**
     * Gets the value of the textIndex property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTextIndex() {
        return textIndex;
    }

    /**
     * Sets the value of the textIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTextIndex(Boolean value) {
        this.textIndex = value;
    }

    /**
     * Gets the value of the displayType property.
     * 
     * @return
     *     possible object is
     *     {@link DisplayType }
     *     
     */
    public DisplayType getDisplayType() {
        return displayType;
    }

    /**
     * Sets the value of the displayType property.
     * 
     * @param value
     *     allowed object is
     *     {@link DisplayType }
     *     
     */
    public void setDisplayType(DisplayType value) {
        this.displayType = value;
    }

    /**
     * Gets the value of the max property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMax() {
        return max;
    }

    /**
     * Sets the value of the max property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMax(String value) {
        this.max = value;
    }

    /**
     * Gets the value of the min property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMin() {
        return min;
    }

    /**
     * Sets the value of the min property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMin(String value) {
        this.min = value;
    }

    /**
     * Gets the value of the defaultAttachmentField property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDefaultAttachmentField() {
        return defaultAttachmentField;
    }

    /**
     * Sets the value of the defaultAttachmentField property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDefaultAttachmentField(String value) {
        this.defaultAttachmentField = value;
    }

    /**
     * Gets the value of the trace property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTrace() {
        return trace;
    }

    /**
     * Sets the value of the trace property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTrace(Boolean value) {
        this.trace = value;
    }

    /**
     * Gets the value of the substParams property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSubstParams() {
        return substParams;
    }

    /**
     * Sets the value of the substParams property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSubstParams(Boolean value) {
        this.substParams = value;
    }

    /**
     * Gets the value of the variableHeightRows property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isVariableHeightRows() {
        return variableHeightRows;
    }

    /**
     * Sets the value of the variableHeightRows property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVariableHeightRows(Boolean value) {
        this.variableHeightRows = value;
    }

    /**
     * Gets the value of the includeTime property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIncludeTime() {
        return includeTime;
    }

    /**
     * Sets the value of the includeTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIncludeTime(Boolean value) {
        this.includeTime = value;
    }

    /**
     * Gets the value of the displayTrueAs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayTrueAs() {
        return displayTrueAs;
    }

    /**
     * Sets the value of the displayTrueAs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayTrueAs(String value) {
        this.displayTrueAs = value;
    }

    /**
     * Gets the value of the displayFalseAs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayFalseAs() {
        return displayFalseAs;
    }

    /**
     * Sets the value of the displayFalseAs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayFalseAs(String value) {
        this.displayFalseAs = value;
    }

    /**
     * Gets the value of the displayAsLink property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDisplayAsLink() {
        return displayAsLink;
    }

    /**
     * Sets the value of the displayAsLink property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDisplayAsLink(Boolean value) {
        this.displayAsLink = value;
    }

    /**
     * Gets the value of the displayAsProgress property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDisplayAsProgress() {
        return displayAsProgress;
    }

    /**
     * Sets the value of the displayAsProgress property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDisplayAsProgress(Boolean value) {
        this.displayAsProgress = value;
    }

    /**
     * Gets the value of the displayAs property.
     * 
     * @return
     *     possible object is
     *     {@link DisplayAsType }
     *     
     */
    public DisplayAsType getDisplayAs() {
        return displayAs;
    }

    /**
     * Sets the value of the displayAs property.
     * 
     * @param value
     *     allowed object is
     *     {@link DisplayAsType }
     *     
     */
    public void setDisplayAs(DisplayAsType value) {
        this.displayAs = value;
    }

    /**
     * Gets the value of the cycleDetection property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCycleDetection() {
        return cycleDetection;
    }

    /**
     * Sets the value of the cycleDetection property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCycleDetection(Boolean value) {
        this.cycleDetection = value;
    }

    /**
     * Gets the value of the showVariableHeightRows property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isShowVariableHeightRows() {
        return showVariableHeightRows;
    }

    /**
     * Sets the value of the showVariableHeightRows property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setShowVariableHeightRows(Boolean value) {
        this.showVariableHeightRows = value;
    }

    /**
     * Gets the value of the substituteParameters property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSubstituteParameters() {
        return substituteParameters;
    }

    /**
     * Sets the value of the substituteParameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSubstituteParameters(Boolean value) {
        this.substituteParameters = value;
    }

    /**
     * Gets the value of the storeToHistoryFrequency property.
     * 
     * @return
     *     possible object is
     *     {@link StoreToHistoryFrequencyType }
     *     
     */
    public StoreToHistoryFrequencyType getStoreToHistoryFrequency() {
        return storeToHistoryFrequency;
    }

    /**
     * Sets the value of the storeToHistoryFrequency property.
     * 
     * @param value
     *     allowed object is
     *     {@link StoreToHistoryFrequencyType }
     *     
     */
    public void setStoreToHistoryFrequency(StoreToHistoryFrequencyType value) {
        this.storeToHistoryFrequency = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FieldDefinition)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final FieldDefinition that = ((FieldDefinition) object);
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            ValuesDefinition lhsValues;
            lhsValues = this.getValues();
            ValuesDefinition rhsValues;
            rhsValues = that.getValues();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "values", lhsValues), LocatorUtils.property(thatLocator, "values", rhsValues), lhsValues, rhsValues)) {
                return false;
            }
        }
        {
            String lhsEditability;
            lhsEditability = this.getEditability();
            String rhsEditability;
            rhsEditability = that.getEditability();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "editability", lhsEditability), LocatorUtils.property(thatLocator, "editability", rhsEditability), lhsEditability, rhsEditability)) {
                return false;
            }
        }
        {
            String lhsRelevance;
            lhsRelevance = this.getRelevance();
            String rhsRelevance;
            rhsRelevance = that.getRelevance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relevance", lhsRelevance), LocatorUtils.property(thatLocator, "relevance", rhsRelevance), lhsRelevance, rhsRelevance)) {
                return false;
            }
        }
        {
            String lhsRelates;
            lhsRelates = this.getRelates();
            String rhsRelates;
            rhsRelates = that.getRelates();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relates", lhsRelates), LocatorUtils.property(thatLocator, "relates", rhsRelates), lhsRelates, rhsRelates)) {
                return false;
            }
        }
        {
            ReverseRelationship lhsReverse;
            lhsReverse = this.getReverse();
            ReverseRelationship rhsReverse;
            rhsReverse = that.getReverse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reverse", lhsReverse), LocatorUtils.property(thatLocator, "reverse", rhsReverse), lhsReverse, rhsReverse)) {
                return false;
            }
        }
        {
            ComputationDefinition lhsComputation;
            lhsComputation = this.getComputation();
            ComputationDefinition rhsComputation;
            rhsComputation = that.getComputation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "computation", lhsComputation), LocatorUtils.property(thatLocator, "computation", rhsComputation), lhsComputation, rhsComputation)) {
                return false;
            }
        }
        {
            ColumnsDefinition lhsDefaultColumns;
            lhsDefaultColumns = this.getDefaultColumns();
            ColumnsDefinition rhsDefaultColumns;
            rhsDefaultColumns = that.getDefaultColumns();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "defaultColumns", lhsDefaultColumns), LocatorUtils.property(thatLocator, "defaultColumns", rhsDefaultColumns), lhsDefaultColumns, rhsDefaultColumns)) {
                return false;
            }
        }
        {
            BackingIssueReference lhsBackingIssue;
            lhsBackingIssue = this.getBackingIssue();
            BackingIssueReference rhsBackingIssue;
            rhsBackingIssue = that.getBackingIssue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "backingIssue", lhsBackingIssue), LocatorUtils.property(thatLocator, "backingIssue", rhsBackingIssue), lhsBackingIssue, rhsBackingIssue)) {
                return false;
            }
        }
        {
            String lhsQuery;
            lhsQuery = this.getQuery();
            String rhsQuery;
            rhsQuery = that.getQuery();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "query", lhsQuery), LocatorUtils.property(thatLocator, "query", rhsQuery), lhsQuery, rhsQuery)) {
                return false;
            }
        }
        {
            String lhsCorrelation;
            lhsCorrelation = this.getCorrelation();
            String rhsCorrelation;
            rhsCorrelation = that.getCorrelation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "correlation", lhsCorrelation), LocatorUtils.property(thatLocator, "correlation", rhsCorrelation), lhsCorrelation, rhsCorrelation)) {
                return false;
            }
        }
        {
            String lhsDefault;
            lhsDefault = this.getDefault();
            String rhsDefault;
            rhsDefault = that.getDefault();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "_default", lhsDefault), LocatorUtils.property(thatLocator, "_default", rhsDefault), lhsDefault, rhsDefault)) {
                return false;
            }
        }
        {
            FieldDefinition.Ranges lhsRanges;
            lhsRanges = this.getRanges();
            FieldDefinition.Ranges rhsRanges;
            rhsRanges = that.getRanges();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ranges", lhsRanges), LocatorUtils.property(thatLocator, "ranges", rhsRanges), lhsRanges, rhsRanges)) {
                return false;
            }
        }
        {
            PhasesDefinition lhsPhases;
            lhsPhases = this.getPhases();
            PhasesDefinition rhsPhases;
            rhsPhases = that.getPhases();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phases", lhsPhases), LocatorUtils.property(thatLocator, "phases", rhsPhases), lhsPhases, rhsPhases)) {
                return false;
            }
        }
        {
            Suggestions lhsSuggestions;
            lhsSuggestions = this.getSuggestions();
            Suggestions rhsSuggestions;
            rhsSuggestions = that.getSuggestions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suggestions", lhsSuggestions), LocatorUtils.property(thatLocator, "suggestions", rhsSuggestions), lhsSuggestions, rhsSuggestions)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            FieldType lhsType;
            lhsType = this.getType();
            FieldType rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsDisplayPattern;
            lhsDisplayPattern = this.getDisplayPattern();
            String rhsDisplayPattern;
            rhsDisplayPattern = that.getDisplayPattern();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayPattern", lhsDisplayPattern), LocatorUtils.property(thatLocator, "displayPattern", rhsDisplayPattern), lhsDisplayPattern, rhsDisplayPattern)) {
                return false;
            }
        }
        {
            Boolean lhsMultivalued;
            lhsMultivalued = this.isMultivalued();
            Boolean rhsMultivalued;
            rhsMultivalued = that.isMultivalued();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "multivalued", lhsMultivalued), LocatorUtils.property(thatLocator, "multivalued", rhsMultivalued), lhsMultivalued, rhsMultivalued)) {
                return false;
            }
        }
        {
            Boolean lhsRichContent;
            lhsRichContent = this.isRichContent();
            Boolean rhsRichContent;
            rhsRichContent = that.isRichContent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "richContent", lhsRichContent), LocatorUtils.property(thatLocator, "richContent", rhsRichContent), lhsRichContent, rhsRichContent)) {
                return false;
            }
        }
        {
            String lhsDisplayName;
            lhsDisplayName = this.getDisplayName();
            String rhsDisplayName;
            rhsDisplayName = that.getDisplayName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayName", lhsDisplayName), LocatorUtils.property(thatLocator, "displayName", rhsDisplayName), lhsDisplayName, rhsDisplayName)) {
                return false;
            }
        }
        {
            Integer lhsMaxLength;
            lhsMaxLength = this.getMaxLength();
            Integer rhsMaxLength;
            rhsMaxLength = that.getMaxLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxLength", lhsMaxLength), LocatorUtils.property(thatLocator, "maxLength", rhsMaxLength), lhsMaxLength, rhsMaxLength)) {
                return false;
            }
        }
        {
            Integer lhsDisplayRows;
            lhsDisplayRows = this.getDisplayRows();
            Integer rhsDisplayRows;
            rhsDisplayRows = that.getDisplayRows();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayRows", lhsDisplayRows), LocatorUtils.property(thatLocator, "displayRows", rhsDisplayRows), lhsDisplayRows, rhsDisplayRows)) {
                return false;
            }
        }
        {
            LoggingType lhsLogging;
            lhsLogging = this.getLogging();
            LoggingType rhsLogging;
            rhsLogging = that.getLogging();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "logging", lhsLogging), LocatorUtils.property(thatLocator, "logging", rhsLogging), lhsLogging, rhsLogging)) {
                return false;
            }
        }
        {
            Boolean lhsTextIndex;
            lhsTextIndex = this.isTextIndex();
            Boolean rhsTextIndex;
            rhsTextIndex = that.isTextIndex();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "textIndex", lhsTextIndex), LocatorUtils.property(thatLocator, "textIndex", rhsTextIndex), lhsTextIndex, rhsTextIndex)) {
                return false;
            }
        }
        {
            DisplayType lhsDisplayType;
            lhsDisplayType = this.getDisplayType();
            DisplayType rhsDisplayType;
            rhsDisplayType = that.getDisplayType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayType", lhsDisplayType), LocatorUtils.property(thatLocator, "displayType", rhsDisplayType), lhsDisplayType, rhsDisplayType)) {
                return false;
            }
        }
        {
            String lhsMax;
            lhsMax = this.getMax();
            String rhsMax;
            rhsMax = that.getMax();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "max", lhsMax), LocatorUtils.property(thatLocator, "max", rhsMax), lhsMax, rhsMax)) {
                return false;
            }
        }
        {
            String lhsMin;
            lhsMin = this.getMin();
            String rhsMin;
            rhsMin = that.getMin();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "min", lhsMin), LocatorUtils.property(thatLocator, "min", rhsMin), lhsMin, rhsMin)) {
                return false;
            }
        }
        {
            String lhsDefaultAttachmentField;
            lhsDefaultAttachmentField = this.getDefaultAttachmentField();
            String rhsDefaultAttachmentField;
            rhsDefaultAttachmentField = that.getDefaultAttachmentField();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "defaultAttachmentField", lhsDefaultAttachmentField), LocatorUtils.property(thatLocator, "defaultAttachmentField", rhsDefaultAttachmentField), lhsDefaultAttachmentField, rhsDefaultAttachmentField)) {
                return false;
            }
        }
        {
            Boolean lhsTrace;
            lhsTrace = this.isTrace();
            Boolean rhsTrace;
            rhsTrace = that.isTrace();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trace", lhsTrace), LocatorUtils.property(thatLocator, "trace", rhsTrace), lhsTrace, rhsTrace)) {
                return false;
            }
        }
        {
            Boolean lhsSubstParams;
            lhsSubstParams = this.isSubstParams();
            Boolean rhsSubstParams;
            rhsSubstParams = that.isSubstParams();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "substParams", lhsSubstParams), LocatorUtils.property(thatLocator, "substParams", rhsSubstParams), lhsSubstParams, rhsSubstParams)) {
                return false;
            }
        }
        {
            Boolean lhsVariableHeightRows;
            lhsVariableHeightRows = this.isVariableHeightRows();
            Boolean rhsVariableHeightRows;
            rhsVariableHeightRows = that.isVariableHeightRows();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "variableHeightRows", lhsVariableHeightRows), LocatorUtils.property(thatLocator, "variableHeightRows", rhsVariableHeightRows), lhsVariableHeightRows, rhsVariableHeightRows)) {
                return false;
            }
        }
        {
            Boolean lhsIncludeTime;
            lhsIncludeTime = this.isIncludeTime();
            Boolean rhsIncludeTime;
            rhsIncludeTime = that.isIncludeTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "includeTime", lhsIncludeTime), LocatorUtils.property(thatLocator, "includeTime", rhsIncludeTime), lhsIncludeTime, rhsIncludeTime)) {
                return false;
            }
        }
        {
            String lhsDisplayTrueAs;
            lhsDisplayTrueAs = this.getDisplayTrueAs();
            String rhsDisplayTrueAs;
            rhsDisplayTrueAs = that.getDisplayTrueAs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayTrueAs", lhsDisplayTrueAs), LocatorUtils.property(thatLocator, "displayTrueAs", rhsDisplayTrueAs), lhsDisplayTrueAs, rhsDisplayTrueAs)) {
                return false;
            }
        }
        {
            String lhsDisplayFalseAs;
            lhsDisplayFalseAs = this.getDisplayFalseAs();
            String rhsDisplayFalseAs;
            rhsDisplayFalseAs = that.getDisplayFalseAs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayFalseAs", lhsDisplayFalseAs), LocatorUtils.property(thatLocator, "displayFalseAs", rhsDisplayFalseAs), lhsDisplayFalseAs, rhsDisplayFalseAs)) {
                return false;
            }
        }
        {
            Boolean lhsDisplayAsLink;
            lhsDisplayAsLink = this.isDisplayAsLink();
            Boolean rhsDisplayAsLink;
            rhsDisplayAsLink = that.isDisplayAsLink();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayAsLink", lhsDisplayAsLink), LocatorUtils.property(thatLocator, "displayAsLink", rhsDisplayAsLink), lhsDisplayAsLink, rhsDisplayAsLink)) {
                return false;
            }
        }
        {
            Boolean lhsDisplayAsProgress;
            lhsDisplayAsProgress = this.isDisplayAsProgress();
            Boolean rhsDisplayAsProgress;
            rhsDisplayAsProgress = that.isDisplayAsProgress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayAsProgress", lhsDisplayAsProgress), LocatorUtils.property(thatLocator, "displayAsProgress", rhsDisplayAsProgress), lhsDisplayAsProgress, rhsDisplayAsProgress)) {
                return false;
            }
        }
        {
            DisplayAsType lhsDisplayAs;
            lhsDisplayAs = this.getDisplayAs();
            DisplayAsType rhsDisplayAs;
            rhsDisplayAs = that.getDisplayAs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayAs", lhsDisplayAs), LocatorUtils.property(thatLocator, "displayAs", rhsDisplayAs), lhsDisplayAs, rhsDisplayAs)) {
                return false;
            }
        }
        {
            Boolean lhsCycleDetection;
            lhsCycleDetection = this.isCycleDetection();
            Boolean rhsCycleDetection;
            rhsCycleDetection = that.isCycleDetection();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cycleDetection", lhsCycleDetection), LocatorUtils.property(thatLocator, "cycleDetection", rhsCycleDetection), lhsCycleDetection, rhsCycleDetection)) {
                return false;
            }
        }
        {
            Boolean lhsShowVariableHeightRows;
            lhsShowVariableHeightRows = this.isShowVariableHeightRows();
            Boolean rhsShowVariableHeightRows;
            rhsShowVariableHeightRows = that.isShowVariableHeightRows();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "showVariableHeightRows", lhsShowVariableHeightRows), LocatorUtils.property(thatLocator, "showVariableHeightRows", rhsShowVariableHeightRows), lhsShowVariableHeightRows, rhsShowVariableHeightRows)) {
                return false;
            }
        }
        {
            Boolean lhsSubstituteParameters;
            lhsSubstituteParameters = this.isSubstituteParameters();
            Boolean rhsSubstituteParameters;
            rhsSubstituteParameters = that.isSubstituteParameters();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "substituteParameters", lhsSubstituteParameters), LocatorUtils.property(thatLocator, "substituteParameters", rhsSubstituteParameters), lhsSubstituteParameters, rhsSubstituteParameters)) {
                return false;
            }
        }
        {
            StoreToHistoryFrequencyType lhsStoreToHistoryFrequency;
            lhsStoreToHistoryFrequency = this.getStoreToHistoryFrequency();
            StoreToHistoryFrequencyType rhsStoreToHistoryFrequency;
            rhsStoreToHistoryFrequency = that.getStoreToHistoryFrequency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "storeToHistoryFrequency", lhsStoreToHistoryFrequency), LocatorUtils.property(thatLocator, "storeToHistoryFrequency", rhsStoreToHistoryFrequency), lhsStoreToHistoryFrequency, rhsStoreToHistoryFrequency)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            ValuesDefinition theValues;
            theValues = this.getValues();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "values", theValues), currentHashCode, theValues);
        }
        {
            String theEditability;
            theEditability = this.getEditability();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "editability", theEditability), currentHashCode, theEditability);
        }
        {
            String theRelevance;
            theRelevance = this.getRelevance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relevance", theRelevance), currentHashCode, theRelevance);
        }
        {
            String theRelates;
            theRelates = this.getRelates();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relates", theRelates), currentHashCode, theRelates);
        }
        {
            ReverseRelationship theReverse;
            theReverse = this.getReverse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reverse", theReverse), currentHashCode, theReverse);
        }
        {
            ComputationDefinition theComputation;
            theComputation = this.getComputation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "computation", theComputation), currentHashCode, theComputation);
        }
        {
            ColumnsDefinition theDefaultColumns;
            theDefaultColumns = this.getDefaultColumns();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "defaultColumns", theDefaultColumns), currentHashCode, theDefaultColumns);
        }
        {
            BackingIssueReference theBackingIssue;
            theBackingIssue = this.getBackingIssue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "backingIssue", theBackingIssue), currentHashCode, theBackingIssue);
        }
        {
            String theQuery;
            theQuery = this.getQuery();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "query", theQuery), currentHashCode, theQuery);
        }
        {
            String theCorrelation;
            theCorrelation = this.getCorrelation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "correlation", theCorrelation), currentHashCode, theCorrelation);
        }
        {
            String theDefault;
            theDefault = this.getDefault();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "_default", theDefault), currentHashCode, theDefault);
        }
        {
            FieldDefinition.Ranges theRanges;
            theRanges = this.getRanges();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ranges", theRanges), currentHashCode, theRanges);
        }
        {
            PhasesDefinition thePhases;
            thePhases = this.getPhases();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phases", thePhases), currentHashCode, thePhases);
        }
        {
            Suggestions theSuggestions;
            theSuggestions = this.getSuggestions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suggestions", theSuggestions), currentHashCode, theSuggestions);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            FieldType theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String theDisplayPattern;
            theDisplayPattern = this.getDisplayPattern();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayPattern", theDisplayPattern), currentHashCode, theDisplayPattern);
        }
        {
            Boolean theMultivalued;
            theMultivalued = this.isMultivalued();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "multivalued", theMultivalued), currentHashCode, theMultivalued);
        }
        {
            Boolean theRichContent;
            theRichContent = this.isRichContent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "richContent", theRichContent), currentHashCode, theRichContent);
        }
        {
            String theDisplayName;
            theDisplayName = this.getDisplayName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayName", theDisplayName), currentHashCode, theDisplayName);
        }
        {
            Integer theMaxLength;
            theMaxLength = this.getMaxLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxLength", theMaxLength), currentHashCode, theMaxLength);
        }
        {
            Integer theDisplayRows;
            theDisplayRows = this.getDisplayRows();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayRows", theDisplayRows), currentHashCode, theDisplayRows);
        }
        {
            LoggingType theLogging;
            theLogging = this.getLogging();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "logging", theLogging), currentHashCode, theLogging);
        }
        {
            Boolean theTextIndex;
            theTextIndex = this.isTextIndex();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "textIndex", theTextIndex), currentHashCode, theTextIndex);
        }
        {
            DisplayType theDisplayType;
            theDisplayType = this.getDisplayType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayType", theDisplayType), currentHashCode, theDisplayType);
        }
        {
            String theMax;
            theMax = this.getMax();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "max", theMax), currentHashCode, theMax);
        }
        {
            String theMin;
            theMin = this.getMin();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "min", theMin), currentHashCode, theMin);
        }
        {
            String theDefaultAttachmentField;
            theDefaultAttachmentField = this.getDefaultAttachmentField();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "defaultAttachmentField", theDefaultAttachmentField), currentHashCode, theDefaultAttachmentField);
        }
        {
            Boolean theTrace;
            theTrace = this.isTrace();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trace", theTrace), currentHashCode, theTrace);
        }
        {
            Boolean theSubstParams;
            theSubstParams = this.isSubstParams();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "substParams", theSubstParams), currentHashCode, theSubstParams);
        }
        {
            Boolean theVariableHeightRows;
            theVariableHeightRows = this.isVariableHeightRows();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "variableHeightRows", theVariableHeightRows), currentHashCode, theVariableHeightRows);
        }
        {
            Boolean theIncludeTime;
            theIncludeTime = this.isIncludeTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "includeTime", theIncludeTime), currentHashCode, theIncludeTime);
        }
        {
            String theDisplayTrueAs;
            theDisplayTrueAs = this.getDisplayTrueAs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayTrueAs", theDisplayTrueAs), currentHashCode, theDisplayTrueAs);
        }
        {
            String theDisplayFalseAs;
            theDisplayFalseAs = this.getDisplayFalseAs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayFalseAs", theDisplayFalseAs), currentHashCode, theDisplayFalseAs);
        }
        {
            Boolean theDisplayAsLink;
            theDisplayAsLink = this.isDisplayAsLink();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayAsLink", theDisplayAsLink), currentHashCode, theDisplayAsLink);
        }
        {
            Boolean theDisplayAsProgress;
            theDisplayAsProgress = this.isDisplayAsProgress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayAsProgress", theDisplayAsProgress), currentHashCode, theDisplayAsProgress);
        }
        {
            DisplayAsType theDisplayAs;
            theDisplayAs = this.getDisplayAs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayAs", theDisplayAs), currentHashCode, theDisplayAs);
        }
        {
            Boolean theCycleDetection;
            theCycleDetection = this.isCycleDetection();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cycleDetection", theCycleDetection), currentHashCode, theCycleDetection);
        }
        {
            Boolean theShowVariableHeightRows;
            theShowVariableHeightRows = this.isShowVariableHeightRows();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "showVariableHeightRows", theShowVariableHeightRows), currentHashCode, theShowVariableHeightRows);
        }
        {
            Boolean theSubstituteParameters;
            theSubstituteParameters = this.isSubstituteParameters();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "substituteParameters", theSubstituteParameters), currentHashCode, theSubstituteParameters);
        }
        {
            StoreToHistoryFrequencyType theStoreToHistoryFrequency;
            theStoreToHistoryFrequency = this.getStoreToHistoryFrequency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storeToHistoryFrequency", theStoreToHistoryFrequency), currentHashCode, theStoreToHistoryFrequency);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            ValuesDefinition theValues;
            theValues = this.getValues();
            strategy.appendField(locator, this, "values", buffer, theValues);
        }
        {
            String theEditability;
            theEditability = this.getEditability();
            strategy.appendField(locator, this, "editability", buffer, theEditability);
        }
        {
            String theRelevance;
            theRelevance = this.getRelevance();
            strategy.appendField(locator, this, "relevance", buffer, theRelevance);
        }
        {
            String theRelates;
            theRelates = this.getRelates();
            strategy.appendField(locator, this, "relates", buffer, theRelates);
        }
        {
            ReverseRelationship theReverse;
            theReverse = this.getReverse();
            strategy.appendField(locator, this, "reverse", buffer, theReverse);
        }
        {
            ComputationDefinition theComputation;
            theComputation = this.getComputation();
            strategy.appendField(locator, this, "computation", buffer, theComputation);
        }
        {
            ColumnsDefinition theDefaultColumns;
            theDefaultColumns = this.getDefaultColumns();
            strategy.appendField(locator, this, "defaultColumns", buffer, theDefaultColumns);
        }
        {
            BackingIssueReference theBackingIssue;
            theBackingIssue = this.getBackingIssue();
            strategy.appendField(locator, this, "backingIssue", buffer, theBackingIssue);
        }
        {
            String theQuery;
            theQuery = this.getQuery();
            strategy.appendField(locator, this, "query", buffer, theQuery);
        }
        {
            String theCorrelation;
            theCorrelation = this.getCorrelation();
            strategy.appendField(locator, this, "correlation", buffer, theCorrelation);
        }
        {
            String theDefault;
            theDefault = this.getDefault();
            strategy.appendField(locator, this, "_default", buffer, theDefault);
        }
        {
            FieldDefinition.Ranges theRanges;
            theRanges = this.getRanges();
            strategy.appendField(locator, this, "ranges", buffer, theRanges);
        }
        {
            PhasesDefinition thePhases;
            thePhases = this.getPhases();
            strategy.appendField(locator, this, "phases", buffer, thePhases);
        }
        {
            Suggestions theSuggestions;
            theSuggestions = this.getSuggestions();
            strategy.appendField(locator, this, "suggestions", buffer, theSuggestions);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            FieldType theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            String theDisplayPattern;
            theDisplayPattern = this.getDisplayPattern();
            strategy.appendField(locator, this, "displayPattern", buffer, theDisplayPattern);
        }
        {
            Boolean theMultivalued;
            theMultivalued = this.isMultivalued();
            strategy.appendField(locator, this, "multivalued", buffer, theMultivalued);
        }
        {
            Boolean theRichContent;
            theRichContent = this.isRichContent();
            strategy.appendField(locator, this, "richContent", buffer, theRichContent);
        }
        {
            String theDisplayName;
            theDisplayName = this.getDisplayName();
            strategy.appendField(locator, this, "displayName", buffer, theDisplayName);
        }
        {
            Integer theMaxLength;
            theMaxLength = this.getMaxLength();
            strategy.appendField(locator, this, "maxLength", buffer, theMaxLength);
        }
        {
            Integer theDisplayRows;
            theDisplayRows = this.getDisplayRows();
            strategy.appendField(locator, this, "displayRows", buffer, theDisplayRows);
        }
        {
            LoggingType theLogging;
            theLogging = this.getLogging();
            strategy.appendField(locator, this, "logging", buffer, theLogging);
        }
        {
            Boolean theTextIndex;
            theTextIndex = this.isTextIndex();
            strategy.appendField(locator, this, "textIndex", buffer, theTextIndex);
        }
        {
            DisplayType theDisplayType;
            theDisplayType = this.getDisplayType();
            strategy.appendField(locator, this, "displayType", buffer, theDisplayType);
        }
        {
            String theMax;
            theMax = this.getMax();
            strategy.appendField(locator, this, "max", buffer, theMax);
        }
        {
            String theMin;
            theMin = this.getMin();
            strategy.appendField(locator, this, "min", buffer, theMin);
        }
        {
            String theDefaultAttachmentField;
            theDefaultAttachmentField = this.getDefaultAttachmentField();
            strategy.appendField(locator, this, "defaultAttachmentField", buffer, theDefaultAttachmentField);
        }
        {
            Boolean theTrace;
            theTrace = this.isTrace();
            strategy.appendField(locator, this, "trace", buffer, theTrace);
        }
        {
            Boolean theSubstParams;
            theSubstParams = this.isSubstParams();
            strategy.appendField(locator, this, "substParams", buffer, theSubstParams);
        }
        {
            Boolean theVariableHeightRows;
            theVariableHeightRows = this.isVariableHeightRows();
            strategy.appendField(locator, this, "variableHeightRows", buffer, theVariableHeightRows);
        }
        {
            Boolean theIncludeTime;
            theIncludeTime = this.isIncludeTime();
            strategy.appendField(locator, this, "includeTime", buffer, theIncludeTime);
        }
        {
            String theDisplayTrueAs;
            theDisplayTrueAs = this.getDisplayTrueAs();
            strategy.appendField(locator, this, "displayTrueAs", buffer, theDisplayTrueAs);
        }
        {
            String theDisplayFalseAs;
            theDisplayFalseAs = this.getDisplayFalseAs();
            strategy.appendField(locator, this, "displayFalseAs", buffer, theDisplayFalseAs);
        }
        {
            Boolean theDisplayAsLink;
            theDisplayAsLink = this.isDisplayAsLink();
            strategy.appendField(locator, this, "displayAsLink", buffer, theDisplayAsLink);
        }
        {
            Boolean theDisplayAsProgress;
            theDisplayAsProgress = this.isDisplayAsProgress();
            strategy.appendField(locator, this, "displayAsProgress", buffer, theDisplayAsProgress);
        }
        {
            DisplayAsType theDisplayAs;
            theDisplayAs = this.getDisplayAs();
            strategy.appendField(locator, this, "displayAs", buffer, theDisplayAs);
        }
        {
            Boolean theCycleDetection;
            theCycleDetection = this.isCycleDetection();
            strategy.appendField(locator, this, "cycleDetection", buffer, theCycleDetection);
        }
        {
            Boolean theShowVariableHeightRows;
            theShowVariableHeightRows = this.isShowVariableHeightRows();
            strategy.appendField(locator, this, "showVariableHeightRows", buffer, theShowVariableHeightRows);
        }
        {
            Boolean theSubstituteParameters;
            theSubstituteParameters = this.isSubstituteParameters();
            strategy.appendField(locator, this, "substituteParameters", buffer, theSubstituteParameters);
        }
        {
            StoreToHistoryFrequencyType theStoreToHistoryFrequency;
            theStoreToHistoryFrequency = this.getStoreToHistoryFrequency();
            strategy.appendField(locator, this, "storeToHistoryFrequency", buffer, theStoreToHistoryFrequency);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="range" type="{http://www.ptc.com/integrity-solution}RangeDefinition"/>
     *       &lt;/sequence>
     *       &lt;attribute name="associated-field" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "range"
    })
    public static class Ranges
        implements Equals, HashCode, ToString
    {

        @XmlElement(required = true)
        protected RangeDefinition range;
        @XmlAttribute(name = "associated-field")
        protected String associatedField;

        /**
         * Gets the value of the range property.
         * 
         * @return
         *     possible object is
         *     {@link RangeDefinition }
         *     
         */
        public RangeDefinition getRange() {
            return range;
        }

        /**
         * Sets the value of the range property.
         * 
         * @param value
         *     allowed object is
         *     {@link RangeDefinition }
         *     
         */
        public void setRange(RangeDefinition value) {
            this.range = value;
        }

        /**
         * Gets the value of the associatedField property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getAssociatedField() {
            return associatedField;
        }

        /**
         * Sets the value of the associatedField property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setAssociatedField(String value) {
            this.associatedField = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof FieldDefinition.Ranges)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final FieldDefinition.Ranges that = ((FieldDefinition.Ranges) object);
            {
                RangeDefinition lhsRange;
                lhsRange = this.getRange();
                RangeDefinition rhsRange;
                rhsRange = that.getRange();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "range", lhsRange), LocatorUtils.property(thatLocator, "range", rhsRange), lhsRange, rhsRange)) {
                    return false;
                }
            }
            {
                String lhsAssociatedField;
                lhsAssociatedField = this.getAssociatedField();
                String rhsAssociatedField;
                rhsAssociatedField = that.getAssociatedField();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedField", lhsAssociatedField), LocatorUtils.property(thatLocator, "associatedField", rhsAssociatedField), lhsAssociatedField, rhsAssociatedField)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                RangeDefinition theRange;
                theRange = this.getRange();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "range", theRange), currentHashCode, theRange);
            }
            {
                String theAssociatedField;
                theAssociatedField = this.getAssociatedField();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedField", theAssociatedField), currentHashCode, theAssociatedField);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                RangeDefinition theRange;
                theRange = this.getRange();
                strategy.appendField(locator, this, "range", buffer, theRange);
            }
            {
                String theAssociatedField;
                theAssociatedField = this.getAssociatedField();
                strategy.appendField(locator, this, "associatedField", buffer, theAssociatedField);
            }
            return buffer;
        }

    }

}
